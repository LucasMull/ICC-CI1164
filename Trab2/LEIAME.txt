DESCRIÇÃO GERAL
    TRABALHO 1
EQUIPE
    Luan Machado Bernardt | GRR20190363
    Lucas Müller          | GRR20197160

NOME
    float* SL_alocaMatrix(unsigned int n, unsigned int m);
DESCRIÇÃO
    A função SL_alocaMatrix() faz uma alocação única de tamanho 
    n*m*sizeof(float). Esse design foi escolhido
    pois além de otimizar a localidade dos elementos em um único grande
    bloco de memória, também é menos suscetível a erros, uma vez que só
    requer um único free() para liberar memória.
RETORNO
    Retorna uma matriz do tipo float de tamanho nxm, ou NULL se houve
    falha.

NOME
    t_sist *SL_aloca(unsigned int n, unsigned int m);
DESCRIÇÃO
    Aloca na memória uma struct t_sist contendo os seguintes campos :
        - SL->A :
            A matriz original de norma n.
        - SL->Int :
            Espaço para a matriz após interpolação.
        - SL->L e SL->U :
            Espaço para a matriz L(lower) e U(upper), obtidas em
            SL_triangulariza().
RETORNO
    Uma struct t_sist de norma nxm, ou NULL se houve falha.

NOME
    void SL_libera(t_sist *SL);
DESCRIÇÃO
    Liberação da memória alocada por SL_aloca().

NOME
    t_sist *SL_leitura();
DESCRIÇÃO
    Efetua leitura da matriz pela entrada padrão (stdin), retorna
    imediatamente após completar a primeira matriz, chamadas
    consecutivas devem ser feitas para conseguir qualquer matriz
    sequêncial.
RETORNO
    Um ponteiro para t_sist contendo a matriz obtida nessa interação

NOME
    void SL_printMatrix(FILE *f_out, float **matrix, unsigned int n, unsigned int m);
DESCRIÇÃO
    Imprime a matriz nxm fornecida na saída padrão (stdout).

NOME
    int SL_triangulariza(t_sist *SL, int pivotP, double *tTotal);
DESCRIÇÃO
    Efetua a triangularização de SL->A e obtêm os campos SL->L e 
    SL->U, que serão utilizados para calcular a inversa em
    SL_geraInversa().
RETORNO
    0 se sucesso e -1 em caso de falha.
